# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'oracle'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build Docker Image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USER }}/weatheranalytics:latest
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Docker Push
      run: docker push ${{ secrets.DOCKER_USER }}/weatheranalytics:latest
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: ls
      #env:
      #  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #  HOST: ${{ secrets.SSH_HOST }}
      #run: |
      #  echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
      #  ssh -o StrictHostKeyChecking=no -i private_key ubuntu@${HOST} '
      #
      #    ls
      #    '

